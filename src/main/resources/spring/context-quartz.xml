<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

    <!-- 使用MethodInvokingJobDetailFactoryBean，任务类可以不实现Job接口，通过targetMethod指定调用方法-->
    <!-- 定义目标bean和bean中的方法 -->
    <bean id="redisToDatabaseJob" class="com.mjx.job.RedisToDatabaseJob">
        <property name="trainDAO" ref="trainDAO" />
    </bean>
    <bean id="redisToDatabaseJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="redisToDatabaseJob" />
        <property name="targetMethod" value="run" />        <!-- 指定任务类中需要执行的方法 -->
        <property name="concurrent" value="false" />        <!-- 上一次未执行完成的，要等待有再执行 -->
    </bean>

    <!--  调度工厂  -->
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
                    <property name="jobDetail" ref="redisToDatabaseJobDetail" ></property>
                    <property name="cronExpression" value="0/60 * * * * ?"></property>
                </bean>


            </list>
        </property>
    </bean>

</beans>
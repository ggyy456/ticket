<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="Train">
    <typeAlias alias="train" type="com.mjx.entity.TrainDTO" />

    <sql id="wheresql" >
        <dynamic prepend="where">
            <!-- 始发站 -->
            <isNotNull prepend="and" property="beginStation">
                a.BEGIN_STATION = #beginStation#
            </isNotNull>

            <!-- 目的地 -->
            <isNotNull prepend="and" property="endStation">
                a.END_STATION = #endStation#
            </isNotNull>

            <!-- 车次类型 -->
            <isNotNull prepend="and" property="trainType">
                a.train_type in ($trainType$)
            </isNotNull>

            <!-- 车票类型 -->
            <isNotNull prepend="and" property="ticketType">
                b.TICKET_TYPE = #ticketType#
            </isNotNull>

            <isNotNull prepend="and" property="isSell">
                IS_SELL = #isSell#
            </isNotNull>

            <isNotNull prepend="and" property="queryTime1">
                a.BEGIN_TIME &gt;= #queryTime1#
            </isNotNull>

            <isNotNull prepend="and" property="queryTime2">
                a.BEGIN_TIME &lt;= #queryTime2#
            </isNotNull>

            <isNotEmpty property="dynamicSql">
                $dynamicSql$
            </isNotEmpty>
        </dynamic>
    </sql >

    <statement id="getPageTotal" parameterClass="com.mjx.ibatis.PagingMapImpl" resultClass="integer">
        select count(distinct a.TRAIN_ID)
        From T_TRAIN a
        join T_TICKET b on a.TRAIN_ID=b.TRAIN_ID
        <include refid="wheresql" />
    </statement>

    <statement id="getPage" parameterClass="com.mjx.ibatis.PagingMapImpl" resultClass="train">
        select a.TRAIN_ID as trainId,a.TRAIN_NO as trainNo,a.BEGIN_STATION as beginStation
            ,a.END_STATION as endStation,a.BEGIN_TIME as beginTime,a.END_TIME as endTime,a.TAKE_TIME as takeTime
            ,count(case when b.TICKET_TYPE='一等座' and b.IS_SELL='0' then b.TICKET_ID end) as firstSeat
            ,count(case when b.TICKET_TYPE='二等座' and b.IS_SELL='0' then b.TICKET_ID end) as secondSeat
            ,count(case when b.TICKET_TYPE='商务座' and b.IS_SELL='0' then b.TICKET_ID end) as businessSeat
            ,count(case when b.TICKET_TYPE='硬座' and b.IS_SELL='0' then b.TICKET_ID end) as hardSeat
            ,count(case when b.TICKET_TYPE='软座' and b.IS_SELL='0' then b.TICKET_ID end) as softSeat
            ,count(case when b.TICKET_TYPE='硬卧' and b.IS_SELL='0' then b.TICKET_ID end) as hardSleep
            ,count(case when b.TICKET_TYPE='软卧' and b.IS_SELL='0' then b.TICKET_ID end) as softSleep
            ,count(case when b.TICKET_TYPE='无座' and b.IS_SELL='0' then b.TICKET_ID end) as noSeat
        From T_TRAIN a
        join T_TICKET b on a.TRAIN_ID=b.TRAIN_ID
        <include refid="wheresql" />
        group by a.TRAIN_ID,a.TRAIN_NO,a.BEGIN_STATION,a.END_STATION,a.BEGIN_TIME,a.END_TIME,a.TAKE_TIME
    </statement>


    <statement id="getEntityTicket" parameterClass="train" resultClass="train">
        select b.TICKET_ID as ticketId,a.TRAIN_ID as trainId
        from T_TRAIN a
        join t_ticket b on a.TRAIN_ID=b.TRAIN_ID
        <include refid="wheresql" />
    </statement>

    <statement id="getEntityUser" parameterClass="train" resultClass="integer">
        select count(*)
        From T_USER_TICKET a
        join T_TICKET b on a.TICKET_ID=b.TICKET_ID
        where (a.USER_ID=#userId:INTEGER# and b.TRAIN_ID=#trainId:INTEGER#) or a.TICKET_ID=#ticketId:INTEGER#
    </statement>

    <statement id="saveUserTicket" parameterClass="train">
        <![CDATA[
			INSERT into T_USER_TICKET (
				USER_ID,TICKET_ID
			)
			values (
				#userId:INTEGER#, #ticketId:INTEGER#
			)
		]]>
    </statement>

    <statement id="updateTicket" parameterClass="train">
        <![CDATA[
			update T_TICKET set IS_SELL=#isSell:VARCHAR#
			where TICKET_ID=#ticketId:INTEGER#
		]]>
    </statement>



</sqlMap>